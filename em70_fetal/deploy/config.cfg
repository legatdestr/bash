__dir="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
__file="${__dir}/$(basename "${BASH_SOURCE[0]}")"
__base="$(basename ${__file} .sh)"
__os="Linux"
__user_home_dir="$(cd ~ && pwd)"
if [[ "${OSTYPE:-}" == "darwin"* ]]; then
  __os="OSX"
fi

#C_PROXY_URI='http://proxy:6666';
C_PROXY_URI='';
C_PROXY_STRING="proxy=${C_PROXY_URI}";

C_GIT_USER='git';
C_GIT_URI='git.em70.ru:fetal';
C_GIT_DIR_NAME='fetal';
C_GIT_CLONE_DIR="$(cd ~ && pwd)/${C_GIT_DIR_NAME}";
C_GIT_CLONE_STRING="${C_GIT_USER}@${C_GIT_URI}";
C_GIT_REVISION_FILE="${__user_home_dir}/fetal_revision.txt";

C_DB_USER_ADMIN='elecard';
C_DB_USER_PASSWORD='cnjk120cv';
C_DB_HOST_URI='localhost';
C_DB_DB_NAME='fetalmon';
C_DB_POSTGRES_USER_PASSWORD='postgres';


C_GIT_SPA_DIR="${C_GIT_CLONE_DIR}/app/web/spa/proto";
C_SPA_DEPLOY_DIR='/var/www/html';
C_GIT_API_DIR="${C_GIT_CLONE_DIR}/app/web/api/proto";

C_API_DEPLOY_DIR='/var/www/html/api/v1';
C_API_FRAMEWORK_DIR='/var/www/api_framework';

C_GIT_MIGRATION_TOOL_DIR="${C_GIT_CLONE_DIR}"'/db/tools/em/migration';


LOG_LEVEL=7;
NO_COLOR=0;

set -o pipefail  # trace ERR through pipes
set -o errtrace  # trace ERR through 'time command' and other functions
set -o nounset   ## set -u : exit the script if you try to use an uninitialised variable
set -o errexit   ## set -e : exit the script if any statement returns a non-true return value

# Environment variables and their defaults
LOG_LEVEL="${LOG_LEVEL:-6}" # 7 = debug -> 0 = emergency
NO_COLOR="${NO_COLOR:-}"    # true = disable color. otherwise autodetected

# Commandline options. This defines the usage page, and is used to parse cli
# opts & defaults from. The parsing is unforgiving so be precise in your syntax
# - A short option must be preset for every long option; but every short option
#   need not have a long option
# - `--` is respected as the separator between options and arguments
read -r -d '' usage <<-'EOF' || true # exits non-zero when EOF encountered
  -f --file  [arg] Filename to process. Required.
  -t --temp  [arg] Location of tempfile. Default="/tmp/bar"
  -v               Enable verbose mode, print script as it is executed
  -d --debug       Enables debug mode
  -h --help        This page
  -n --no-color    Disable color output
  -1 --one         Do just one thing
EOF
